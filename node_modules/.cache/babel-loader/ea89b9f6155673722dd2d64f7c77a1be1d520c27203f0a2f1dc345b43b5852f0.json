{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\my-new-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Invit from \"./Invit\";\nimport Galere from \"./Components/Galere\";\n// import Collections from \"./Components/Galere/Collections\";\n\n// function Result({ correct }) {\n//   return (\n//     <div className=\"result\">\n//       <div className=\"img\">\n//         <img src=\"https://emojio.ru/images/apple-b/1f389.png\"></img>\n//         <h1>\n//           your result is {correct} of {questions.length}\n//         </h1>\n//         <a href=\"/\"> try again</a>\n//       </div>\n//     </div>\n//   );\n// }\n// const questions = [\n//   {\n//     title: \"react - it..\",\n//     variants: [\"freemwork\", \"biblioteca\", \"application\"],\n//     correct: 1,\n//     id: 1,\n//   },\n//   {\n//     title: \"compontnts - it..\",\n//     variants: [\"freemwork\", \"i'm good\", \"biblioteca\"],\n//     correct: 2,\n//     id: 2,\n//   },\n//   {\n//     title: \"JSX - it...\",\n//     variants: [\"freemwork\", \"i'm good\", \"freemwork\"],\n//     correct: 1,\n//     id: 3,\n//   },\n//   {\n//     title: \"react - it..\",\n//     variants: [\"\", \"\", \"\"],\n//     correct: 1,\n//     id: 4,\n//   },\n// ];\n\n// function Game({ step, question, onclickVariant }) {\n//   // Вычисляем процент прогресса\n//   const procant = (step / questions.length) * 100;\n\n//   return (\n//     <div className=\"game\">\n//       <div className=\"progress-bar\">\n//         <div className=\"progress\" style={{ width: `${procant}%` }}></div>\n//       </div>\n//       <h1>{question.title}</h1>\n//       <ul>\n//         {question.variants.map((text, index) => (\n//           <li onClick={() => onclickVariant(index)} key={index}>\n//             {text}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [step, setStep] = React.useState(0);\n  const [correct, setCorrect] = React.useState(0);\n  const question = questions[step];\n  const onclickVariant = index => {\n    setStep(step + 1);\n    if (index === question.correct) {\n      setCorrect(correct + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Galere, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KauCwZj0rtjqC1N6Cmz4yPHdtSU=\");\n_c = App;\nexport default App;\n{\n  /* <svg\n  width=\"600\"\n  height=\"200\"\n  viewBox=\"0 0 600 200\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  >\n  <rect\n    x=\"10\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />\n  <rect\n    x=\"200\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />{\" \"}\n  <rect\n    x=\"200\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />{\" \"}\n  <rect\n    x=\"200\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />{\" \"}\n  <rect\n    x=\"200\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />\n  <rect\n    x=\"10\"\n    y=\"60\"\n    width=\"120\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />\n  <rect\n    x=\"140\"\n    y=\"60\"\n    width=\"120\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />\n  </svg>; */\n}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Invit","Galere","jsxDEV","_jsxDEV","App","_s","step","setStep","correct","setCorrect","question","questions","onclickVariant","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/my-new-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Invit from \"./Invit\";\nimport Galere from \"./Components/Galere\";\n// import Collections from \"./Components/Galere/Collections\";\n\n// function Result({ correct }) {\n//   return (\n//     <div className=\"result\">\n//       <div className=\"img\">\n//         <img src=\"https://emojio.ru/images/apple-b/1f389.png\"></img>\n//         <h1>\n//           your result is {correct} of {questions.length}\n//         </h1>\n//         <a href=\"/\"> try again</a>\n//       </div>\n//     </div>\n//   );\n// }\n// const questions = [\n//   {\n//     title: \"react - it..\",\n//     variants: [\"freemwork\", \"biblioteca\", \"application\"],\n//     correct: 1,\n//     id: 1,\n//   },\n//   {\n//     title: \"compontnts - it..\",\n//     variants: [\"freemwork\", \"i'm good\", \"biblioteca\"],\n//     correct: 2,\n//     id: 2,\n//   },\n//   {\n//     title: \"JSX - it...\",\n//     variants: [\"freemwork\", \"i'm good\", \"freemwork\"],\n//     correct: 1,\n//     id: 3,\n//   },\n//   {\n//     title: \"react - it..\",\n//     variants: [\"\", \"\", \"\"],\n//     correct: 1,\n//     id: 4,\n//   },\n// ];\n\n// function Game({ step, question, onclickVariant }) {\n//   // Вычисляем процент прогресса\n//   const procant = (step / questions.length) * 100;\n\n//   return (\n//     <div className=\"game\">\n//       <div className=\"progress-bar\">\n//         <div className=\"progress\" style={{ width: `${procant}%` }}></div>\n//       </div>\n//       <h1>{question.title}</h1>\n//       <ul>\n//         {question.variants.map((text, index) => (\n//           <li onClick={() => onclickVariant(index)} key={index}>\n//             {text}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\nfunction App() {\n  const [step, setStep] = React.useState(0);\n  const [correct, setCorrect] = React.useState(0);\n  const question = questions[step];\n\n  const onclickVariant = (index) => {\n    setStep(step + 1);\n    if (index === question.correct) {\n      setCorrect(correct + 1);\n    }\n  };\n  return (\n    <div className=\"app\">\n      <Galere />\n      {/* <Invit /> */}\n      {/* <div className=\"content\">\n        {step !== questions.length ? (\n          <Game\n            step={step}\n            question={question}\n            onclickVariant={onclickVariant}\n          />\n        ) : (\n          <Result correct={correct} />\n        )}\n      </div> */}\n    </div>\n  );\n}\nexport default App;\n\n{\n  /* <svg\n  width=\"600\"\n  height=\"200\"\n  viewBox=\"0 0 600 200\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <rect\n    x=\"10\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />\n  <rect\n    x=\"200\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />{\" \"}\n  <rect\n    x=\"200\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />{\" \"}\n  <rect\n    x=\"200\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />{\" \"}\n  <rect\n    x=\"200\"\n    y=\"10\"\n    width=\"180\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />\n  <rect\n    x=\"10\"\n    y=\"60\"\n    width=\"120\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />\n  <rect\n    x=\"140\"\n    y=\"60\"\n    width=\"120\"\n    height=\"40\"\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"4\"\n  />\n</svg>; */\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,qBAAqB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMW,QAAQ,GAAGC,SAAS,CAACL,IAAI,CAAC;EAEhC,MAAMM,cAAc,GAAIC,KAAK,IAAK;IAChCN,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACjB,IAAIO,KAAK,KAAKH,QAAQ,CAACF,OAAO,EAAE;MAC9BC,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;IACzB;EACF,CAAC;EACD,oBACEL,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBZ,OAAA,CAACF,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAaP,CAAC;AAEV;AAACd,EAAA,CA5BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA6BZ,eAAeA,GAAG;AAElB;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEE;AAsED,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}